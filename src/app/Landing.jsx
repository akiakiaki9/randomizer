"use client"
import React, { useState } from 'react'
import Switcher from './Switcher';
import { useTranslation } from 'react-i18next';

export default function Landing() {
    const { t } = useTranslation();
    const [min, setMin] = useState('');
    const [max, setMax] = useState('');
    const [result, setResult] = useState(null);

    const handleGenerate = () => {
        const from = parseInt(min, 10);
        const to = parseInt(max, 10);
        if (isNaN(from) || isNaN(to)) {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–±–∞ —á–∏—Å–ª–∞.");
            return;
        }
        if (from > to) {
            alert("–ß–∏—Å–ª–æ '–û—Ç' –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ —á–∏—Å–ª–∞ '–î–æ'.");
            return;
        }
        const random = Math.floor(Math.random() * (to - from + 1)) + from;
        setResult(random);
    };

    return (
        <div className='main'>
            <div className='landing'>
                <div className="landing-header">
                    <h1>{t("landing_header.item_1")} <a href="https://akbarsoft.uz" target="_blank">Akbar Soft</a></h1>
                    <p>–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞: 17 –∞–ø—Ä–µ–ª—è 2025 –≥–æ–¥–∞</p>
                </div>
                <Switcher />
                <div className="landing-body__main">
                    <div className="landing-body">
                        <p>–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª, —á—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ:</p>
                        <div className='landing-body__container'>
                            <div className="landing-body__container__header">
                                <div>
                                    <label htmlFor="min">–û—Ç</label>
                                    <input
                                        type="number"
                                        id="min"
                                        value={min}
                                        onChange={(e) => setMin(e.target.value)}
                                    />
                                </div>
                                <div>
                                    <label htmlFor="max">–î–æ</label>
                                    <input
                                        type="number"
                                        id="max"
                                        value={max}
                                        onChange={(e) => setMax(e.target.value)}
                                    />
                                </div>
                            </div>
                            <button onClick={handleGenerate}>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å</button>
                            <div className="result">
                                {result !== null ? (
                                    <p>üéâ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: <strong>{result}</strong></p>
                                ) : (
                                    <div className="result"></div>
                                )}
                            </div>
                        </div>
                    </div>
                </div>

                <div className="landing-footer">
                    <b>‚ÑπÔ∏è –í–ê–ñ–ù–û!</b>
                    <p>
                        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º.
                        –ù–∏–∫–∞–∫–∏–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—é—Ç ‚Äî –≤—Å—ë —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
                        –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º –∏ —á–µ—Å—Ç–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º.
                    </p>
                </div>
            </div>
            <div className="footer">
                <p>{t("landing_footer.item_3")} <a href="https://akbarsoft.uz" target="_blank">Akbar Soft</a></p>
            </div>
        </div>
    );
};